map{ id = "all_entities", description = "All entities" }
map{ id = "basic_test", description = "Basic test" }
map{ id = "bugs/1007_door_open_close", description = "#1007: door:open/close()" }
map{ id = "bugs/1015_crash_scrolling_to_invalid_layer/map_1", description = "#1015: Crash when scrolling to an invalid layer" }
map{ id = "bugs/1015_crash_scrolling_to_invalid_layer/map_2", description = "Map 2" }
map{ id = "bugs/1024_custom_entity_set_origin", description = "#1024: custom_entity:set_origin()" }
map{ id = "bugs/1026_door_sprite_higher_than_16", description = "#1026: Door sprite higher than its bounding box" }
map{ id = "bugs/1036_falling_again_after_bad_ground", description = "#1036: Hero falls again after bad ground" }
map{ id = "bugs/1042_multiple_facing_entities_random_picked", description = "#1042: Facing entity is random when multiple ones overlap" }
map{ id = "bugs/1062_enemy_set_attack_consequence_callback", description = "#1062: Add callback parameter to enemy:set_attack_consequence" }
map{ id = "bugs/1076_treasure_dialog_optional", description = "#1076: Treasure dialog should be optional" }
map{ id = "bugs/1094_entity_properties", description = "#1094: Entity user-defined properties" }
map{ id = "bugs/1136_get_path_get_trajectory_missing_element", description = "#1136: Missing element in pixel_movement:get_trajectory() and path_movement:get_path()" }
map{ id = "bugs/1139_pickable_on_stream", description = "#1139: Allow pickables to follow streams" }
map{ id = "bugs/1158_entity_timer_suspended", description = "#1158: timer:set_suspended_with_map(false) not working with entity timers" }
map{ id = "bugs/1162_custom_entity_collision_wrong_order", description = "#1162: Wrong sprite order in custom entity collision callback" }
map{ id = "bugs/1163_circular_movement_get_direction4", description = "#1163: circular_movement:get_direction4() not working" }
map{ id = "bugs/1171_sword_knowledge_on_ability_used", description = "#1171: Fix item:on_ability_used() not called with sword knowledge" }
map{ id = "bugs/1179_enemy_on_restarted_called_twice", description = "#1179: enemy:on_restarted() is called twice" }
map{ id = "bugs/1181_hurt_enemy_after_custom_attack", description = "#1181: enemy:hurt() does not work after a custom attack" }
map{ id = "bugs/1193_entity_drawn_after_removed/map_1", description = "#1193: Entity still drawn after removed" }
map{ id = "bugs/1193_entity_drawn_after_removed/map_2", description = "Destination map" }
map{ id = "bugs/1195_enemy_dying_animation_never_finishes", description = "#1195: Enemy dying animation never finishes" }
map{ id = "bugs/1200_create_shader_from_source", description = "#1200: Create shader from source" }
map{ id = "bugs/1210_shader_scaling_factor", description = "#1210: shader:get/set_shading_factor()" }
map{ id = "bugs/1214_blocks_in_water", description = "#1214: Blocks cannot be pushed into water" }
map{ id = "bugs/1221_custom_entity_follow_stream", description = "#1221: Allow custom entities to follow streams" }
map{ id = "bugs/1228_crash_map_get_hero/1", description = "#1128: Crash in map:get_hero() after the map is closed" }
map{ id = "bugs/1228_crash_map_get_hero/2", description = "Map 2" }
map{ id = "bugs/1230_entity_on_lifting", description = "#1230: entity:on_lifting" }
map{ id = "bugs/1236_entity_timer_not_suspended", description = "#1236: Entity timer continues when the map is suspended" }
map{ id = "bugs/486_diagonal_dynamic_tiles", description = "#486: Wrong obstacles with diagonal dynamic tiles" }
map{ id = "bugs/496_stream_speed_0", description = "#496: Allow streams to have a speed of zero" }
map{ id = "bugs/526_get_entities_same_region", description = "#526: map:get_entities_in_same_region()" }
map{ id = "bugs/630_change_resources", description = "#630: Allow to change the resource list dynamically" }
map{ id = "bugs/633_straight_movement_speed_zero", description = "#633: Straight movements resets speed to zero when reaching an obstacle" }
map{ id = "bugs/656_map_set_world", description = "#656: map:set_world()" }
map{ id = "bugs/664_chest_get_set_treasure", description = "#664: chest:get/set_treasure()" }
map{ id = "bugs/667_hero_save_solid_ground_callback", description = "#867: Add callback parameter to hero:save_solid_ground()" }
map{ id = "bugs/669_entity_get_sprite", description = "#669: entity:get_sprite()" }
map{ id = "bugs/670_map_get_entities_no_hero", description = "#670: map:get_entities() does not return the hero" }
map{ id = "bugs/671_collision_test_not_moving", description = "#671: Custom entity collision not detected when not moving" }
map{ id = "bugs/686_crash_door_item", description = "#686: Crash with doors whose opening condition is an item" }
map{ id = "bugs/699_crash_exit_surface_moving", description = "#699: Crash at exit when a surface was moving" }
map{ id = "bugs/712_npc_set_traversable", description = "#712: npc:is/set_traversable()" }
map{ id = "bugs/716_custom_entity_set_can_traverse_door", description = "#716: Doors cannot be set traversable by custom entities" }
map{ id = "bugs/729_switch_is_walkable", description = "#729: switch:is_walkable()" }
map{ id = "bugs/738_custom_entity_on_ground_below_changed", description = "#738: custom_entity:on_ground_below_changed() is not called" }
map{ id = "bugs/748_entity_overlaps_collision_modes", description = "#748: entity:overlaps() new paramater collision_mode" }
map{ id = "bugs/754_entity_get_max_bounding_box", description = "#754: entity:get_max_bounding_box" }
map{ id = "bugs/762_camera_entity", description = "#762: Camera as entity" }
map{ id = "bugs/769_stuck_dynamic_tile_covered", description = "#769: Non-traversable dynamic tiles covered by traversable ones block the hero" }
map{ id = "bugs/779_get_entities_random_order", description = "#779: map:get_entities() returns entities in random order" }
map{ id = "bugs/781_assert_teletransporter_same_map", description = "#781: Assertion error when a teletransporter leads to the same map" }
map{ id = "bugs/794_custom_entity_set_can_traverse_ground", description = "#794: custom_entity:set_can_traverse_ground(\"traversable\", false) does not work" }
map{ id = "bugs/795_recreate_entity_same_name", description = "#795: Cannot create an entity with the same name as another one just removed" }
map{ id = "bugs/796_map_get_entities_by_type", description = "#796: Add map:get_entities_by_type()" }
map{ id = "bugs/805_hero_set_invincible", description = "#805: hero:set_invincible() not working" }
map{ id = "bugs/807_cannot_traverse_own_ground", description = "#807: Entity stuck if cannot traverse its own ground" }
map{ id = "bugs/808_get_entities_in_rectangle_duplicates", description = "#808: Duplicate entities in map:get_entities_in_rectangle()" }
map{ id = "bugs/809_entity_bring_sprite_to_front_back", description = "#809: entity:bring_sprite_to_front/back()" }
map{ id = "bugs/810_hero_disappears_after_scrolling/1", description = "#810: The hero disappears after scrolling between adjacent maps" }
map{ id = "bugs/810_hero_disappears_after_scrolling/2", description = "#810" }
map{ id = "bugs/817_entity_set_enabled_overlapping_hero", description = "#817: entity:set_enabled() not working if it is an obstacle on the hero" }
map{ id = "bugs/818_sprite_get_num_frames", description = "#818: sprite:get_num_frames()" }
map{ id = "bugs/819_destination_starting_location_mode/1", description = "#819: Starting location mode on destinations" }
map{ id = "bugs/819_destination_starting_location_mode/2", description = "#819: world a" }
map{ id = "bugs/819_destination_starting_location_mode/3", description = "#819: world a" }
map{ id = "bugs/821_hero_start_attack", description = "#821: hero:start_attack()" }
map{ id = "bugs/823_sprite_get_size_origin", description = "#823: sprite:get_size() and sprite:get_origin()" }
map{ id = "bugs/827_ground_detection_after_unfreeze", description = "#827: Hero not falling in hole after unfreeze" }
map{ id = "bugs/830_entity_get_ground_position", description = "#830: entity:get_ground_position() and entity:get_ground_below()" }
map{ id = "bugs/844_camera_on_state_changed", description = "#844: camera:on_state_changed()" }
map{ id = "bugs/845_game_set_suspended", description = "#845: game:set_suspended" }
map{ id = "bugs/851_entity_get_sprites", description = "#851: entity:get_sprites()" }
map{ id = "bugs/855_hero_get_sprite_wrong", description = "#855: hero:get_sprite() returns the wrong sprite" }
map{ id = "bugs/859_crash_game_start", description = "#859: Crash when restarting game" }
map{ id = "bugs/860_crash_remove_sprite", description = "#860: Crash when removing secondary sprite" }
map{ id = "bugs/861_sprite_set_animation_callback", description = "#861: sprite:set_animation() callback parameter" }
map{ id = "bugs/867_crash_crystal", description = "#867: Crash with crystals" }
map{ id = "bugs/875_freeze_load_map_tiles_outside", description = "#875: Freeze when loading a map with tiles outside" }
map{ id = "bugs/877_get_facing_entity", description = "#877: entity:get_facing_entity()" }
map{ id = "bugs/880_custom_entity_set_origin", description = "#880: custom_entity_set_origin() not working" }
map{ id = "bugs/883_collision_test_not_moving_sprite", description = "#883: Custom entity sprite collision not detected when not moving" }
map{ id = "bugs/884_tileset_sprite_file_optional", description = "#884: Tileset sprite file sould be optional" }
map{ id = "bugs/889_crash_use_non_saved_item", description = "#889: Crash when using a non saved item" }
map{ id = "bugs/937_custom_entity_missing_direction", description = "#937: Error when changing the animation of a custom entity if the direction is missing" }
map{ id = "bugs/940_crash_bomb_on_stream", description = "#940: Crash when placing a bomb on a stream" }
map{ id = "bugs/945_flying_enemies_fall_in_hole", description = "#945: Flying enemies fall in holes when the map starts" }
map{ id = "bugs/946_reused_movement_callback", description = "#946: Callbacks no longer work after reusing a movement" }
map{ id = "bugs/954_entity_name_nil_after_removed", description = "#954: Entity name is nil after removed" }
map{ id = "bugs/971_sol_file_list", description = "#971: sol.file.list()" }
map{ id = "dynamic_tile_tests", description = "Dynamic tile tests" }
map{ id = "graphical/scale2x", description = "Scale2x shader test" }
map{ id = "jumper_tests", description = "Jumper tests" }
map{ id = "oriented_collisions", description = "Test rotation and scaled collisions" }
map{ id = "surface_tests", description = "Surface tests" }
map{ id = "teletransportation_tests/main", description = "Main map" }
map{ id = "teletransportation_tests/start_in_deep_water_drown", description = "Start in deep water (drowning)" }
map{ id = "teletransportation_tests/start_in_deep_water_swim", description = "Start in deep water (swimming)" }
map{ id = "teletransportation_tests/start_in_hole", description = "Start in a hole" }
map{ id = "teletransportation_tests/start_in_lava", description = "Start in lava" }
map{ id = "teletransportation_tests/start_in_shallow_water", description = "Start in shallow water" }
map{ id = "teletransportation_tests/start_in_stairs", description = "Start in stairs" }
map{ id = "teletransportation_tests/start_same_point", description = "Start at the same point" }
map{ id = "teletransportation_tests/start_scrolling", description = "Start by scrolling" }
map{ id = "teletransportation_tests/start_scrolling_carrying", description = "Start by scrolling while carrying" }
map{ id = "teletransportation_tests/start_scrolling_jumping", description = "Start by scrolling while jumping" }
map{ id = "teletransportation_tests/start_scrolling_running", description = "Start by scrolling while running" }
map{ id = "teletransportation_tests/start_scrolling_same_map", description = "Scroll to the other side of the same map" }
map{ id = "teletransportation_tests/start_scrolling_sword_charged", description = "Start by scrolling while the sword is charged" }
map{ id = "traversable", description = "Traversable test area" }

tileset{ id = "castle", description = "Castle" }
tileset{ id = "castle_no_sprites_file", description = "Castle (no sprites file)" }
tileset{ id = "overworld", description = "Overworld" }

sprite{ id = "16x16", description = "16x16 sprite" }
sprite{ id = "16x24", description = "16x24 sprite" }
sprite{ id = "citizens/witch", description = "Witch" }
sprite{ id = "enemies/enemy_killed", description = "Enemy killed" }
sprite{ id = "enemies/slime_green", description = "Green Slime" }
sprite{ id = "enemies/test_enemy", description = "Test enemy" }
sprite{ id = "entities/arrow", description = "Arrow" }
sprite{ id = "entities/block", description = "Block" }
sprite{ id = "entities/bomb", description = "Bomb" }
sprite{ id = "entities/bomb_flower", description = "Bomb flower" }
sprite{ id = "entities/bush", description = "Bush" }
sprite{ id = "entities/chest", description = "Chest" }
sprite{ id = "entities/crystal", description = "Crystal" }
sprite{ id = "entities/crystal_block", description = "Crystal block" }
sprite{ id = "entities/door", description = "Door" }
sprite{ id = "entities/door_16_24", description = "16x24 Door" }
sprite{ id = "entities/explosion", description = "Explosion" }
sprite{ id = "entities/fire", description = "Fire" }
sprite{ id = "entities/grass", description = "Grass" }
sprite{ id = "entities/hookshot", description = "Hookshot" }
sprite{ id = "entities/items", description = "Items" }
sprite{ id = "entities/platform", description = "Platform" }
sprite{ id = "entities/pot", description = "Pot" }
sprite{ id = "entities/rupee_icon", description = "Money icon" }
sprite{ id = "entities/shadow", description = "Shadow" }
sprite{ id = "entities/sign", description = "Sign" }
sprite{ id = "entities/solid_switch", description = "Solid switch" }
sprite{ id = "entities/star", description = "Star" }
sprite{ id = "entities/stone_small_black", description = "Stone (black)" }
sprite{ id = "entities/stone_small_white", description = "Stone (white)" }
sprite{ id = "entities/switch", description = "Switch" }
sprite{ id = "hero/ground1", description = "Grass under hero" }
sprite{ id = "hero/ground2", description = "Shallow water under hero" }
sprite{ id = "hero/shield1", description = "Hero shield 1" }
sprite{ id = "hero/sword1", description = "Hero sword 1" }
sprite{ id = "hero/sword_stars1", description = "Hero sword stars 1" }
sprite{ id = "hero/trail", description = "Hero trail" }
sprite{ id = "hero/tunic1", description = "Hero tunic 1" }
sprite{ id = "main_heroes/eldran", description = "Eldran" }
sprite{ id = "main_heroes/robyne", description = "Robyne" }
sprite{ id = "main_heroes/sword", description = "Sword" }
sprite{ id = "main_heroes/sword_electricity", description = "Sword electricity" }
sprite{ id = "main_heroes/trail", description = "Trail" }
sprite{ id = "menus/solarus_logo", description = "Solarus logo" }
sprite{ id = "pivot", description = "Pivot Test" }
sprite{ id = "todo", description = "TODO image" }


sound{ id = "arrow_hit", description = "arrow_hit" }
sound{ id = "bird_chirp", description = "bird_chirp" }
sound{ id = "bird_chirp1", description = "bird_chirp1" }
sound{ id = "bird_chirp2", description = "bird_chirp2" }
sound{ id = "bird_cute", description = "bird_cute" }
sound{ id = "bomb", description = "bomb" }
sound{ id = "boomerang", description = "boomerang" }
sound{ id = "boss_charge", description = "boss_charge" }
sound{ id = "boss_fireball", description = "boss_fireball" }
sound{ id = "boss_hurt", description = "boss_hurt" }
sound{ id = "boss_killed", description = "boss_killed" }
sound{ id = "bounce", description = "bounce" }
sound{ id = "bow", description = "bow" }
sound{ id = "bush", description = "bush" }
sound{ id = "cane", description = "cane" }
sound{ id = "cane2", description = "cane2" }
sound{ id = "cane3", description = "cane3" }
sound{ id = "cat", description = "cat" }
sound{ id = "chest_appears", description = "chest_appears" }
sound{ id = "chest_open", description = "chest_open" }
sound{ id = "cricket", description = "cricket" }
sound{ id = "crystal", description = "crystal" }
sound{ id = "crystal2", description = "crystal2" }
sound{ id = "cursor", description = "cursor" }
sound{ id = "danger", description = "danger" }
sound{ id = "diarandor/solarus_logo", description = "Solarus logo" }
sound{ id = "door_closed", description = "door_closed" }
sound{ id = "door_open", description = "door_open" }
sound{ id = "door_unlocked", description = "door_unlocked" }
sound{ id = "eduardo/secret", description = "secret" }
sound{ id = "electrified", description = "electrified" }
sound{ id = "electrified2", description = "electrified2" }
sound{ id = "enemy_awake", description = "enemy_awake" }
sound{ id = "enemy_hurt", description = "enemy_hurt" }
sound{ id = "enemy_killed", description = "enemy_killed" }
sound{ id = "explosion", description = "explosion" }
sound{ id = "falling_on_hole", description = "falling_on_hole" }
sound{ id = "falling_rock", description = "falling_rock" }
sound{ id = "fire_ball", description = "fire_ball" }
sound{ id = "fire_ball2", description = "fire_ball2" }
sound{ id = "frost1", description = "frost1" }
sound{ id = "frost2", description = "frost2" }
sound{ id = "heart", description = "heart" }
sound{ id = "heart_container", description = "heart_container" }
sound{ id = "hero_dying", description = "hero_dying" }
sound{ id = "hero_falls", description = "hero_falls" }
sound{ id = "hero_hurt", description = "hero_hurt" }
sound{ id = "hero_lands", description = "hero_lands" }
sound{ id = "hero_pushes", description = "hero_pushes" }
sound{ id = "hero_seen", description = "hero_seen" }
sound{ id = "hookshot", description = "hookshot" }
sound{ id = "item_fall", description = "item_fall" }
sound{ id = "jump", description = "jump" }
sound{ id = "key_fall", description = "key_fall" }
sound{ id = "lamp", description = "lamp" }
sound{ id = "lift", description = "lift" }
sound{ id = "magnet1", description = "magnet1" }
sound{ id = "message_end", description = "message_end" }
sound{ id = "message_letter", description = "message_letter" }
sound{ id = "money_counter", description = "money_counter" }
sound{ id = "money_counter_end", description = "money_counter_end" }
sound{ id = "monster_hurt", description = "zora" }
sound{ id = "mouse", description = "mouse" }
sound{ id = "ok", description = "ok" }
sound{ id = "open_lock", description = "open_lock" }
sound{ id = "pause_closed", description = "pause_closed" }
sound{ id = "pause_open", description = "pause_open" }
sound{ id = "picked_item", description = "picked_item" }
sound{ id = "picked_money", description = "picked_money" }
sound{ id = "picked_small_key", description = "picked_small_key" }
sound{ id = "quake", description = "quake" }
sound{ id = "running", description = "running" }
sound{ id = "running_obstacle", description = "running_obstacle" }
sound{ id = "shield", description = "shield" }
sound{ id = "shield2", description = "shield2" }
sound{ id = "shield3", description = "shield3" }
sound{ id = "soft_tap", description = "soft_tap" }
sound{ id = "splash", description = "splash" }
sound{ id = "stairs_down_end", description = "stairs_down_end" }
sound{ id = "stairs_down_start", description = "stairs_down_start" }
sound{ id = "stairs_up_end", description = "stairs_up_end" }
sound{ id = "stairs_up_start", description = "stairs_up_start" }
sound{ id = "stone", description = "stone" }
sound{ id = "swim", description = "swim" }
sound{ id = "switch", description = "switch" }
sound{ id = "switch_hero", description = "switch_hero" }
sound{ id = "sword1", description = "sword1" }
sound{ id = "sword2", description = "sword2" }
sound{ id = "sword3", description = "sword3" }
sound{ id = "sword4", description = "sword4" }
sound{ id = "sword_spin_attack_load", description = "sword_spin_attack_load" }
sound{ id = "sword_spin_attack_release", description = "sword_spin_attack_release" }
sound{ id = "sword_tapping", description = "sword_tapping" }
sound{ id = "sword_tapping_weak_wall", description = "sword_tapping_weak_wall" }
sound{ id = "teleporter", description = "teleporter" }
sound{ id = "throw", description = "throw" }
sound{ id = "thunder1", description = "thunder1" }
sound{ id = "thunder2", description = "thunder2" }
sound{ id = "thunder3", description = "thunder3" }
sound{ id = "thunder_double", description = "thunder_double" }
sound{ id = "thunder_far", description = "thunder_far" }
sound{ id = "timer", description = "timer" }
sound{ id = "timer2", description = "timer2" }
sound{ id = "timer_hurry", description = "timer_hurry" }
sound{ id = "tongue", description = "tongue" }
sound{ id = "treasure", description = "treasure" }
sound{ id = "victory", description = "victory" }
sound{ id = "walk_on_grass", description = "walk_on_grass" }
sound{ id = "walk_on_water", description = "walk_on_water" }
sound{ id = "warp", description = "warp" }
sound{ id = "water_fill", description = "water_fill" }
sound{ id = "wings1", description = "wings1" }
sound{ id = "wings2", description = "wings2" }
sound{ id = "world_warp", description = "world_warp" }
sound{ id = "wrong", description = "wrong" }
sound{ id = "wrong2", description = "wrong2" }
sound{ id = "wrong3", description = "wrong3" }

item{ id = "bomb", description = "Bomb" }
item{ id = "item_dialog_no_sprite", description = "Item with a dialog and no sprite" }
item{ id = "item_dialog_sprite", description = "Item with a dialog and a sprite" }
item{ id = "item_no_dialog_no_sprite", description = "Item with no dialog and no sprite" }
item{ id = "item_no_dialog_sprite", description = "Item with no dialog and a sprite" }
item{ id = "non_saved_item", description = "Non-saved item" }
item{ id = "sword", description = "Sword" }

enemy{ id = "bugs/1179_on_restarted_called_twice", description = "#1179: enemy:on_restarted() is called twice" }
enemy{ id = "slime_green", description = "Green Slime" }
enemy{ id = "test_enemy", description = "Test enemy" }
enemy{ id = "test_flying_enemy", description = "Flying enemy" }


language{ id = "en", description = "English" }

font{ id = "8_bit", description = "8 bit" }
font{ id = "minecraftia", description = "Minecraftia" }

shader{ id = "scale2x", description = "Scale2x" }
shader{ id = "sepia", description = "Sepia" }

file{ path = "shaders/scale2x.dat", author = "Christopho", license = "GPL v3" }
file{ path = "shaders/scale2x.frag.glsl", author = "Vlag", license = "GPL v3" }
file{ path = "shaders/scale2x.vert.glsl", author = "Vlag", license = "GPL v3" }
file{ path = "shaders/sepia.dat", author = "Christopho", license = "GPL v3" }
file{ path = "shaders/sepia.frag.glsl", author = "Vlag", license = "GPL v3" }
file{ path = "sounds/diarandor/solarus_logo.ogg", author = "Diarandor", license = "CC BY-SA 4.0" }
